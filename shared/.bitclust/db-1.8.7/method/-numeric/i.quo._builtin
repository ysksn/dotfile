names=quo
visibility=public
kind=defined

--- quo(other)    -> Float

self を other で割った商を返します。
整商を得たい場合は [[m:Numeric#div]] を使ってください。

[[m:Numeric#fdiv]] が結果を [[c:Float]] で返すメソッドなのに対して quo はなるべく正確な数値を返すことを意図しています。
通常は [[c:Float]] の値を返しますが、
[[lib:rational]] ライブラリを require している場合は有理数の範囲に収まるなら [[c:Rational]] の値を返します。

Numeric のサブクラスは、このメソッドを適切に再定義しなければなりません。

@param other 自身を割る数を指定します。

  p 1.quo(3)      #=> 0.3333333333333333
  
  require 'rational'
  p 1.quo(3)      #=> Rational(1, 3)
  p 1.0.quo(3)    #=> 0.3333333333333333
  p 1.quo(3.0)    #=> 0.3333333333333333

@see [[m:Numeric#fdiv]]

