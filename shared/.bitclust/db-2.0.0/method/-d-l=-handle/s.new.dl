names=new
visibility=public
kind=defined

--- new(lib, flags=DL::RTLD_LAZY|DL::RTLD_GLOBAL) -> DL::Handle
--- new(lib, flags=DL::RTLD_LAZY|DL::RTLD_GLOBAL) {|handle| ... }    -> DL::Handle

ライブラリ lib をオープンし、Handle オブジェクトとして返します。

ブロックを指定すれば、生成した Handle を引数としてブロックを実行します。
Handle はブロックの終りで自動的にクローズされます。

flags で [[man:dlopen(3)]] の第2引数として渡すフラグを指定できます。
[[m:DL::RTLD_LAZY]]、[[m:DL::RTLD_NOW]] のどちらか一方を指定する必要があり、
またそれに [[m:DL::RTLD_GLOBAL]] と OR を取ることができます。
詳しい意味は manpage([[man:dlopen(3)]]) を参照してください。

@param lib ライブラリを文字列で指定します。
@param flags フラグ
@raise DL::DLError ライブラリのオープンに失敗した場合に発生します

例:

 require 'dl'

 h = DL::Handle.new('libc.so.6')
 i = h.sym('strlen') #=> 3085201584
 cfunc = DL::CFunc.new(i, DL::TYPE_INT, 'strlen')
 p cfunc.call(['abcde'].pack('p*').unpack('l!*'))   #=> 5

